<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
	<title>Spotify Library Exporter</title>
	<link href="https://fonts.googleapis.com/css?family=Space+Mono:400,700" rel="stylesheet" />
	<link href="/assets/style.css" rel="stylesheet" />
	<link rel="icon" type="image/png" sizes="192x192" href="/assets/favicon.png">
	
	<meta name="twitter:card" content="summary" />
	<meta name="twitter:site" content="@ian_dot_exe" />
	<meta name="twitter:creator" content="@ian_dot_exe" />
	<meta property="og:url" content="https://spotify-library-exporter.herokuapp.com/" />
	<meta property="og:title" content="Spotify Library Exporter" />
	<meta property="og:description" content="Export your entire Spotify library to CSV." />
	<meta property="og:image" content="https://spotify-library-exporter.herokuapp.com/assets/opengraph.png" />
</head>
<body>
	<h1>
		<img class="logo" src="/assets/logo.png" />
		Spotify Library Exporter
	</h1>
	<p>
		<button id="login">
			Login to Spotify
		</button>
	</p>
	
	<hr />
	
	<p>
		<b>What does this do?</b>
	</p>
	
	<p class="gray">
		It's a tool to download your Spotify library as a CSV to be used elsewhere. Migrate from Spotify to Apple Music. Backup your library to use elsewhere. Keep a record offline. It doesn't matter! ðŸŽ‰
	</p>
	
	<p>
		<b>You hacking me?</b>
	</p>
	
	<p class="gray">
		Nah, we simply read your library in the browser and build a URL to download as a CSV. That's it. Check the <a href="https://github.com/dictions/spotify-library-export">source code</a>.
	</p>
	
	<p>
		<b>I want to make this better.</b>
	</p>
	
	<p class="gray">
		<a href="https://github.com/dictions/spotify-library-export">Please do</a>.
	</p>
	
	<script>
		const SPOTIFY_CLIENT_ID = '<%= env.SPOTIFY_CLIENT_ID %>';
		const REDIRECT_URI = '<%= env.REDIRECT_URI %>';
	</script>
	<script>
		var authWindow;
		var loginButton = document.getElementById('login');
		
		var toQueryString = function(obj) {
			var parts = [];
			for (var i in obj) {
				if (obj.hasOwnProperty(i)) {
					parts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));
				}
			}
			return parts.join('&');
		};
		
		var onClickLogin = function() {
			var width = 400;
			var height = 500;
			var left = (screen.width / 2) - (width / 2);
			var top = (screen.height / 2) - (height / 2);
			
			var params = {
				client_id: SPOTIFY_CLIENT_ID,
				redirect_uri: REDIRECT_URI,
				scope: 'user-library-read',
				response_type: 'token'
			};
			
			authWindow = window.open(
				'https://accounts.spotify.com/authorize?' + toQueryString(params),
				'Spotify',
				'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' + width + ', height=' + height + ', top=' + top + ', left=' + left
			);
		};
		
		var receiveAuthToken = function(event) {
			if (event.origin !== window.location.origin) {
				return;
			}
			
			if (authWindow) {
				authWindow.close();
			}
			onAuthorizeSpotify(event.data);
		};
		
		var onAuthorizeSpotify = function(token) {
			window.location.href = window.location.origin + '/download?token=' + token;
		};
			
		window.addEventListener('message', receiveAuthToken, false);
		loginButton.addEventListener('click', onClickLogin);
		
	</script>
</body>
</html>